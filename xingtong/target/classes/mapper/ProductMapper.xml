<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xt.xingtong.interf.ProductMapper">
  <resultMap id="BaseResultMap" type="com.xt.xingtong.entity.Product">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="oid" jdbcType="INTEGER" property="oid" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="volumn" jdbcType="INTEGER" property="volumn" />
    <result column="int0" jdbcType="INTEGER" property="int0" />
    <result column="string0" jdbcType="VARCHAR" property="string0" />
    <result column="string1" jdbcType="VARCHAR" property="string1" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pid, pname, oid, number, weight, volumn, int0, string0, string1
  </sql>
  <select id="selectByExample" parameterType="com.xt.xingtong.entity.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xt.xingtong.entity.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xt.xingtong.entity.Product">
    insert into product (pid, pname, oid, 
      number, weight, volumn, 
      int0, string0, string1
      )
    values (#{pid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, #{oid,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER}, #{volumn,jdbcType=INTEGER}, 
      #{int0,jdbcType=INTEGER}, #{string0,jdbcType=VARCHAR}, #{string1,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xt.xingtong.entity.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="pname != null">
        pname,
      </if>
      <if test="oid != null">
        oid,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="volumn != null">
        volumn,
      </if>
      <if test="int0 != null">
        int0,
      </if>
      <if test="string0 != null">
        string0,
      </if>
      <if test="string1 != null">
        string1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="volumn != null">
        #{volumn,jdbcType=INTEGER},
      </if>
      <if test="int0 != null">
        #{int0,jdbcType=INTEGER},
      </if>
      <if test="string0 != null">
        #{string0,jdbcType=VARCHAR},
      </if>
      <if test="string1 != null">
        #{string1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xt.xingtong.entity.ProductExample" resultType="java.lang.Integer">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null">
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.volumn != null">
        volumn = #{record.volumn,jdbcType=INTEGER},
      </if>
      <if test="record.int0 != null">
        int0 = #{record.int0,jdbcType=INTEGER},
      </if>
      <if test="record.string0 != null">
        string0 = #{record.string0,jdbcType=VARCHAR},
      </if>
      <if test="record.string1 != null">
        string1 = #{record.string1,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set pid = #{record.pid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      oid = #{record.oid,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      volumn = #{record.volumn,jdbcType=INTEGER},
      int0 = #{record.int0,jdbcType=INTEGER},
      string0 = #{record.string0,jdbcType=VARCHAR},
      string1 = #{record.string1,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xt.xingtong.entity.Product">
    update product
    <set>
      <if test="pname != null">
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="oid != null">
        oid = #{oid,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="volumn != null">
        volumn = #{volumn,jdbcType=INTEGER},
      </if>
      <if test="int0 != null">
        int0 = #{int0,jdbcType=INTEGER},
      </if>
      <if test="string0 != null">
        string0 = #{string0,jdbcType=VARCHAR},
      </if>
      <if test="string1 != null">
        string1 = #{string1,jdbcType=VARCHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xt.xingtong.entity.Product">
    update product
    set pname = #{pname,jdbcType=VARCHAR},
      oid = #{oid,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      volumn = #{volumn,jdbcType=INTEGER},
      int0 = #{int0,jdbcType=INTEGER},
      string0 = #{string0,jdbcType=VARCHAR},
      string1 = #{string1,jdbcType=VARCHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.xt.xingtong.entity.Product">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
    <result column="oid" jdbcType="INTEGER" property="oid" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="volumn" jdbcType="INTEGER" property="volumn" />
    <result column="int0" jdbcType="INTEGER" property="int0" />
    <result column="string0" jdbcType="VARCHAR" property="string0" />
    <result column="string1" jdbcType="VARCHAR" property="string1" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pid, pname, oid, number, weight, volumn, int0, string0, string1
  </sql>
  <select id="selectByExample" parameterType="com.xt.xingtong.entity.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xt.xingtong.entity.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xt.xingtong.entity.Product">
    insert into product (pid, pname, oid, 
      number, weight, volumn, 
      int0, string0, string1
      )
    values (#{pid,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR}, #{oid,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER}, #{volumn,jdbcType=INTEGER}, 
      #{int0,jdbcType=INTEGER}, #{string0,jdbcType=VARCHAR}, #{string1,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xt.xingtong.entity.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="pname != null">
        pname,
      </if>
      <if test="oid != null">
        oid,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="volumn != null">
        volumn,
      </if>
      <if test="int0 != null">
        int0,
      </if>
      <if test="string0 != null">
        string0,
      </if>
      <if test="string1 != null">
        string1,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="pname != null">
        #{pname,jdbcType=VARCHAR},
      </if>
      <if test="oid != null">
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="volumn != null">
        #{volumn,jdbcType=INTEGER},
      </if>
      <if test="int0 != null">
        #{int0,jdbcType=INTEGER},
      </if>
      <if test="string0 != null">
        #{string0,jdbcType=VARCHAR},
      </if>
      <if test="string1 != null">
        #{string1,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xt.xingtong.entity.ProductExample" resultType="java.lang.Integer">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.pname != null">
        pname = #{record.pname,jdbcType=VARCHAR},
      </if>
      <if test="record.oid != null">
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.volumn != null">
        volumn = #{record.volumn,jdbcType=INTEGER},
      </if>
      <if test="record.int0 != null">
        int0 = #{record.int0,jdbcType=INTEGER},
      </if>
      <if test="record.string0 != null">
        string0 = #{record.string0,jdbcType=VARCHAR},
      </if>
      <if test="record.string1 != null">
        string1 = #{record.string1,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set pid = #{record.pid,jdbcType=INTEGER},
      pname = #{record.pname,jdbcType=VARCHAR},
      oid = #{record.oid,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      volumn = #{record.volumn,jdbcType=INTEGER},
      int0 = #{record.int0,jdbcType=INTEGER},
      string0 = #{record.string0,jdbcType=VARCHAR},
      string1 = #{record.string1,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xt.xingtong.entity.Product">
    update product
    <set>
      <if test="pname != null">
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="oid != null">
        oid = #{oid,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="volumn != null">
        volumn = #{volumn,jdbcType=INTEGER},
      </if>
      <if test="int0 != null">
        int0 = #{int0,jdbcType=INTEGER},
      </if>
      <if test="string0 != null">
        string0 = #{string0,jdbcType=VARCHAR},
      </if>
      <if test="string1 != null">
        string1 = #{string1,jdbcType=VARCHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xt.xingtong.entity.Product">
    update product
    set pname = #{pname,jdbcType=VARCHAR},
      oid = #{oid,jdbcType=INTEGER},
      number = #{number,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      volumn = #{volumn,jdbcType=INTEGER},
      int0 = #{int0,jdbcType=INTEGER},
      string0 = #{string0,jdbcType=VARCHAR},
      string1 = #{string1,jdbcType=VARCHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
</mapper>