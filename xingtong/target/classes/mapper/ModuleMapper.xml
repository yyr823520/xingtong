<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xt.xingtong.interf.ModuleMapper">
   <resultMap id="BaseResultMap" type="com.xt.xingtong.entity.Module">
    <id column="mid" jdbcType="INTEGER" property="mid" />
    <result column="modulename" jdbcType="VARCHAR" property="modulename" />
    <result column="parentId" jdbcType="INTEGER" property="parentid" />
    <result column="moduleurl" jdbcType="VARCHAR" property="moduleurl" />
    <result column="int0" jdbcType="INTEGER" property="int0" />
    <result column="string0" jdbcType="VARCHAR" property="string0" />
    <result column="string1" jdbcType="VARCHAR" property="string1" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
  </resultMap> 

  <select id="getModuleTree" resultType="module" parameterType="int">
  SELECT m.* FROM module m JOIN module_user mu 
 ON m.mid=mu.mid JOIN employee e ON e.eid=mu.eid WHERE e.eid=#{userId}
  </select>

 
  <!-- 
  
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mid, modulename, parentId, moduleurl, int0, string0, string1, pic
  </sql>
  <select id="selectByExample" parameterType="com.xt.xingtong.entity.ModuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from module
    where mid = #{mid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from module
    where mid = #{mid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xt.xingtong.entity.ModuleExample">
    delete from module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xt.xingtong.entity.Module">
    insert into module (mid, modulename, parentId, 
      moduleurl, int0, string0, 
      string1, pic)
    values (#{mid,jdbcType=INTEGER}, #{modulename,jdbcType=VARCHAR}, #{parentid,jdbcType=INTEGER}, 
      #{moduleurl,jdbcType=VARCHAR}, #{int0,jdbcType=INTEGER}, #{string0,jdbcType=VARCHAR}, 
      #{string1,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xt.xingtong.entity.Module">
    insert into module
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        mid,
      </if>
      <if test="modulename != null">
        modulename,
      </if>
      <if test="parentid != null">
        parentId,
      </if>
      <if test="moduleurl != null">
        moduleurl,
      </if>
      <if test="int0 != null">
        int0,
      </if>
      <if test="string0 != null">
        string0,
      </if>
      <if test="string1 != null">
        string1,
      </if>
      <if test="pic != null">
        pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="modulename != null">
        #{modulename,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="moduleurl != null">
        #{moduleurl,jdbcType=VARCHAR},
      </if>
      <if test="int0 != null">
        #{int0,jdbcType=INTEGER},
      </if>
      <if test="string0 != null">
        #{string0,jdbcType=VARCHAR},
      </if>
      <if test="string1 != null">
        #{string1,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xt.xingtong.entity.ModuleExample" resultType="java.lang.Integer">
    select count(*) from module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update module
    <set>
      <if test="record.mid != null">
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.modulename != null">
        modulename = #{record.modulename,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null">
        parentId = #{record.parentid,jdbcType=INTEGER},
      </if>
      <if test="record.moduleurl != null">
        moduleurl = #{record.moduleurl,jdbcType=VARCHAR},
      </if>
      <if test="record.int0 != null">
        int0 = #{record.int0,jdbcType=INTEGER},
      </if>
      <if test="record.string0 != null">
        string0 = #{record.string0,jdbcType=VARCHAR},
      </if>
      <if test="record.string1 != null">
        string1 = #{record.string1,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update module
    set mid = #{record.mid,jdbcType=INTEGER},
      modulename = #{record.modulename,jdbcType=VARCHAR},
      parentId = #{record.parentid,jdbcType=INTEGER},
      moduleurl = #{record.moduleurl,jdbcType=VARCHAR},
      int0 = #{record.int0,jdbcType=INTEGER},
      string0 = #{record.string0,jdbcType=VARCHAR},
      string1 = #{record.string1,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xt.xingtong.entity.Module">
    update module
    <set>
      <if test="modulename != null">
        modulename = #{modulename,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        parentId = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="moduleurl != null">
        moduleurl = #{moduleurl,jdbcType=VARCHAR},
      </if>
      <if test="int0 != null">
        int0 = #{int0,jdbcType=INTEGER},
      </if>
      <if test="string0 != null">
        string0 = #{string0,jdbcType=VARCHAR},
      </if>
      <if test="string1 != null">
        string1 = #{string1,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xt.xingtong.entity.Module">
    update module
    set modulename = #{modulename,jdbcType=VARCHAR},
      parentId = #{parentid,jdbcType=INTEGER},
      moduleurl = #{moduleurl,jdbcType=VARCHAR},
      int0 = #{int0,jdbcType=INTEGER},
      string0 = #{string0,jdbcType=VARCHAR},
      string1 = #{string1,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR}
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.xt.xingtong.entity.Module">
    <id column="mid" jdbcType="INTEGER" property="mid" />
    <result column="modulename" jdbcType="VARCHAR" property="modulename" />
    <result column="parentId" jdbcType="INTEGER" property="parentid" />
    <result column="moduleurl" jdbcType="VARCHAR" property="moduleurl" />
    <result column="int0" jdbcType="INTEGER" property="int0" />
    <result column="string0" jdbcType="VARCHAR" property="string0" />
    <result column="string1" jdbcType="VARCHAR" property="string1" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mid, modulename, parentId, moduleurl, int0, string0, string1, pic
  </sql>
  <select id="selectByExample" parameterType="com.xt.xingtong.entity.ModuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from module
    where mid = #{mid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from module
    where mid = #{mid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xt.xingtong.entity.ModuleExample">
    delete from module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xt.xingtong.entity.Module">
    insert into module (mid, modulename, parentId, 
      moduleurl, int0, string0, 
      string1, pic)
    values (#{mid,jdbcType=INTEGER}, #{modulename,jdbcType=VARCHAR}, #{parentid,jdbcType=INTEGER}, 
      #{moduleurl,jdbcType=VARCHAR}, #{int0,jdbcType=INTEGER}, #{string0,jdbcType=VARCHAR}, 
      #{string1,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xt.xingtong.entity.Module">
    insert into module
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        mid,
      </if>
      <if test="modulename != null">
        modulename,
      </if>
      <if test="parentid != null">
        parentId,
      </if>
      <if test="moduleurl != null">
        moduleurl,
      </if>
      <if test="int0 != null">
        int0,
      </if>
      <if test="string0 != null">
        string0,
      </if>
      <if test="string1 != null">
        string1,
      </if>
      <if test="pic != null">
        pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="modulename != null">
        #{modulename,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="moduleurl != null">
        #{moduleurl,jdbcType=VARCHAR},
      </if>
      <if test="int0 != null">
        #{int0,jdbcType=INTEGER},
      </if>
      <if test="string0 != null">
        #{string0,jdbcType=VARCHAR},
      </if>
      <if test="string1 != null">
        #{string1,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xt.xingtong.entity.ModuleExample" resultType="java.lang.Integer">
    select count(*) from module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update module
    <set>
      <if test="record.mid != null">
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.modulename != null">
        modulename = #{record.modulename,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null">
        parentId = #{record.parentid,jdbcType=INTEGER},
      </if>
      <if test="record.moduleurl != null">
        moduleurl = #{record.moduleurl,jdbcType=VARCHAR},
      </if>
      <if test="record.int0 != null">
        int0 = #{record.int0,jdbcType=INTEGER},
      </if>
      <if test="record.string0 != null">
        string0 = #{record.string0,jdbcType=VARCHAR},
      </if>
      <if test="record.string1 != null">
        string1 = #{record.string1,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update module
    set mid = #{record.mid,jdbcType=INTEGER},
      modulename = #{record.modulename,jdbcType=VARCHAR},
      parentId = #{record.parentid,jdbcType=INTEGER},
      moduleurl = #{record.moduleurl,jdbcType=VARCHAR},
      int0 = #{record.int0,jdbcType=INTEGER},
      string0 = #{record.string0,jdbcType=VARCHAR},
      string1 = #{record.string1,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xt.xingtong.entity.Module">
    update module
    <set>
      <if test="modulename != null">
        modulename = #{modulename,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        parentId = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="moduleurl != null">
        moduleurl = #{moduleurl,jdbcType=VARCHAR},
      </if>
      <if test="int0 != null">
        int0 = #{int0,jdbcType=INTEGER},
      </if>
      <if test="string0 != null">
        string0 = #{string0,jdbcType=VARCHAR},
      </if>
      <if test="string1 != null">
        string1 = #{string1,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xt.xingtong.entity.Module">
    update module
    set modulename = #{modulename,jdbcType=VARCHAR},
      parentId = #{parentid,jdbcType=INTEGER},
      moduleurl = #{moduleurl,jdbcType=VARCHAR},
      int0 = #{int0,jdbcType=INTEGER},
      string0 = #{string0,jdbcType=VARCHAR},
      string1 = #{string1,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR}
    where mid = #{mid,jdbcType=INTEGER}
  </update> -->
</mapper>